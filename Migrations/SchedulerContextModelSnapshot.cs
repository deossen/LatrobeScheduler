// <auto-generated />
using System;
using LaTrobeScheduler.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LaTrobeScheduler.Migrations
{
    [DbContext(typeof(SchedulerContext))]
    partial class SchedulerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LaTrobeScheduler.Models.Lecturer", b =>
                {
                    b.Property<int>("LecturerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LecturerID"));

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EmailAddress");

                    b.Property<string>("FirstMidName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FirstName");

                    b.Property<string>("KnownSubjects")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("KnownSubjects");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkLoad")
                        .HasColumnType("int")
                        .HasColumnName("WorkLoad");

                    b.HasKey("LecturerID");

                    b.ToTable("Lecturer", (string)null);
                });

            modelBuilder.Entity("LaTrobeScheduler.Models.Subject", b =>
                {
                    b.Property<int>("SubjectID")
                        .HasColumnType("int");

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubjectID");

                    b.ToTable("Subject", (string)null);
                });

            modelBuilder.Entity("LaTrobeUniversity.Models.SubjectInstance", b =>
                {
                    b.Property<int>("SubjectInstanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectInstanceID"));

                    b.Property<int>("LecturerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentNumbers")
                        .HasColumnType("int");

                    b.Property<int>("SubjectID")
                        .HasColumnType("int");

                    b.HasKey("SubjectInstanceID");

                    b.HasIndex("LecturerID");

                    b.HasIndex("SubjectID");

                    b.ToTable("SubjectInstance", (string)null);
                });

            modelBuilder.Entity("LaTrobeUniversity.Models.SubjectInstance", b =>
                {
                    b.HasOne("LaTrobeScheduler.Models.Lecturer", "Lecturer")
                        .WithMany("SubjectInstances")
                        .HasForeignKey("LecturerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaTrobeScheduler.Models.Subject", "Subject")
                        .WithMany("SubjectInstances")
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecturer");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("LaTrobeScheduler.Models.Lecturer", b =>
                {
                    b.Navigation("SubjectInstances");
                });

            modelBuilder.Entity("LaTrobeScheduler.Models.Subject", b =>
                {
                    b.Navigation("SubjectInstances");
                });
#pragma warning restore 612, 618
        }
    }
}
